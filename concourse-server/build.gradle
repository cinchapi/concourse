/*
 * Copyright (c) 2013-2017 Cinchapi Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 plugins {
   id "com.jfrog.bintray" version "1.7"
 }

dependencies {
    compile project(':concourse-driver-java')
    compile project(':concourse-plugin-core')
    compile project(':concourse-shell')
    compile project(':concourse-cli')
    compile project(':concourse-import')
    compile 'com.google.guava:guava:15.0'
    compile 'com.beust:jcommander:1.32'
    compile 'com.github.stephenc.high-scale-lib:high-scale-lib:1.1.4'
    compile ('org.reflections:reflections:0.9.9-RC2'){
        exclude group: 'org.javassist', module:'javassist'
    }
    compile 'org.javassist:javassist:3.18.2-GA'
    compile 'org.eclipse.jetty:jetty-server:9.2.9.v20150224'
    compile 'org.eclipse.jetty:jetty-webapp:9.2.9.v20150224'
    compile 'com.github.spullara.mustache.java:compiler:0.8.15'
    compile 'com.joestelmach:natty:0.12'
    compile 'com.google.inject:guice:4.0'
    compile 'io.atomix.catalyst:catalyst-buffer:1.1.1'
    compile 'com.cinchapi:process-watcher:1.0.0'
    compile ('com.cinchapi:ccl:1.0.0'){
        exclude group: 'com.google.guava', module:'guava'
    }

    testCompile 'com.carrotsearch:junit-benchmarks:0.7.2'
    testCompile 'io.takari.junit:takari-cpsuite:1.2.7'
    testCompile project(':concourse-unit-test-core')
}

test {
    systemProperty 'test', 'true'
}

task context() {
    if(!isWindows && !System.getProperty("jenkins").equals("true")) {
        exec {
            commandLine 'bash', 'context.sh'
        }
        outputs.file "context.txt"
    }
}

def service = "concourse-server"

task distZip(type: Zip, dependsOn: jar) {
    into(service + '/lib') {
        from configurations.runtime
        from jar.outputs
    }
    into(service + '/log'){
        from 'log/console.log'
    }
    into(service + '/bin') {
        from 'scripts'
    }
    into(service + '/conf') {
        from 'conf'
    }
    into(service + "/licenses"){
        from '../licenses'
    }
    into(service) {
        from '../LICENSE'
    }
    into(service) {
        from '../NOTICE'
    }
    into(service) {
        from context.outputs
    }
}

task installer(type: Exec, dependsOn: distZip) {
    if(isWindows) {
      commandLine 'cmd', '/C', 'echo', 'CANNOT BUILD INSTALLER ON WINDOWS!'
    }
    else{
      commandLine 'bash', '.installer.sh', version
    }
}

idea {
    copy {
        from "launch" + File.separator + "idea"
        into ".." + File.separator+ ".idea" + File.separator + "runConfigurations"
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    filesSpec {
      from 'build/distributions/'
      into '.'
    }
    pkg {
        repo = mavenVersion.matches('^[0-9]+\\.[0-9]+\\.[0-9]+(-rc[0-9]+){0,1}$') ? 'oss' : 'oss-snapshots'
        name = 'concourse'
        publish = true
        userOrg = 'cinchapi'
        version {
            name = mavenVersion
            released = new Date()
        }
    }
}
