/**
 * Autogenerated by Thrift Compiler (0.9.0)
 * 
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * 
 * @generated
 */
package org.cinchapi.concourse.thrift;

import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * * Enumerates the list of operators that can be used in {@link
 * ConcourseService#find(String, Operator, List<TObject>, long)}.
 */
@SuppressWarnings({ "unused" })
public enum Operator implements org.apache.thrift.TEnum {
    REGEX(1),
    NOT_REGEX(2),
    EQUALS(3),
    NOT_EQUALS(4),
    GREATER_THAN(5),
    GREATER_THAN_OR_EQUALS(6),
    LESS_THAN(7),
    LESS_THAN_OR_EQUALS(8),
    BETWEEN(9);

    private final int value;

    private Operator(int value) {
        this.value = value;
    }

    /**
     * Get the integer value of this enum value, as defined in the Thrift IDL.
     */
    public int getValue() {
        return value;
    }

    /**
     * Find a the enum type by its integer value, as defined in the Thrift IDL.
     * 
     * @return null if the value is not found.
     */
    public static Operator findByValue(int value) {
        switch (value) {
        case 1:
            return REGEX;
        case 2:
            return NOT_REGEX;
        case 3:
            return EQUALS;
        case 4:
            return NOT_EQUALS;
        case 5:
            return GREATER_THAN;
        case 6:
            return GREATER_THAN_OR_EQUALS;
        case 7:
            return LESS_THAN;
        case 8:
            return LESS_THAN_OR_EQUALS;
        case 9:
            return BETWEEN;
        default:
            return null;
        }
    }
}
